---
- name: playbook for project
  hosts: all
  tasks:
    - name: Download and Install MySQL repository
      yum:
        name: https://repo.mysql.com/mysql84-community-release-el9-1.noarch.rpm
        state: present
        disable_gpg_check: yes

    - name: Install MySQL server
      yum:
        name: mysql-community-server
        state: present
    
    - name: Install Python
      yum:
        name: python3-pip
        state: present

    - name: Install MySQL Python dependency
      pip:
        name: PyMySQL
        executable: pip3
        
    - name: Enable and start MySQL
      systemd:
        name: mysqld
        enabled: yes
        state: started

    #- name: Secure MySQL installation
    #  mysql_user:
    #    login_user: root
    #    login_password: "&A3uOiMOWgXw"
    #    name: root
    #    password: "Ansible#1"
    #    state: present

    #- name: Remove anonymous MySQL users
    #  mysql_user:
    #    name: ""
    #    host_all: yes
    #    state: absent

    #- name: Remove MySQL test database
    #  mysql_db:
    #    name: test
    #    state: absent

    #- name: Reload MySQL privilege tables
    #  command: mysql -u root -pAnsible#1 -e "FLUSH PRIVILEGES;"

    - name: Install PHP and required extensions
      yum:
        name:
          - php
          - php-fpm
          - php-mysqlnd
          - php-cli
          - php-common
          - php-json
          - php-opcache
          - php-mbstring
          - php-xml
          - php-curl
        state: present

    - name: Enable and start PHP-FPM
      service:
        name: php-fpm
        state: started
        enabled: yes

    - name: Install Nginx
      yum:
        name: nginx
        state: present

    - name: Enable and start Nginx
      service:
        name: nginx
        enabled: yes
        state: started

    - name: Create project user
      user:
        name: project
        password: "{{ 'project' | password_hash('sha512') }}"

    - name: Create project directory structure
      file:
        path: /home/project/project/public
        state: directory
        owner: project
        group: project
        mode: '0755'
        recurse: yes

    - name: Enable SELinux HTTP home directory access
      seboolean:
        name: httpd_enable_homedirs
        state: yes
        persistent: yes

    - name: Configure Nginx project site
      copy:
        src: project.conf
        dest: /etc/nginx/conf.d/project.conf

    - name: Restart Nginx and PHP-FPM
      service:
        name: "{{ item }}"
        state: restarted
      loop:
        - nginx
        - php-fpm

    - name: Configure SFTP access
      copy:
        src: sftp.conf
        dest: /etc/ssh/sshd_config.d/sftp.conf

    - name: Restart SSH service
      systemd:
        name: sshd
        state: restarted

    - name: Create SFTP user group and assign project user
      group:
        name: sftpusers
        state: present

    - name: Add project user to sftpusers group
      user:
        name: project
        groups: [ sftpusers, nginx ]
        append: yes

    - name: Set permissions for SFTP directories
      file:
        path: /home/project
        state: directory
        owner: root
        group: sftpusers
        mode: '0755'

    - name: Set permissions for project public directory
      file:
        path: /home/project/project/public
        state: directory
        owner: project
        group: sftpusers
        mode: '0755'

    - name: Download and extract phpMyAdmin
      unarchive:
        src: https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz
        dest: /home/project/project/public/
        remote_src: yes
        creates: /home/project/project/public/phpmyadmin

    - name: Rename phpmyadmin folder name
      command: mv /home/project/project/public/phpMyAdmin-5.2.2-all-languages/ /home/project/project/public/phpmyadmin/
      args:
        removes: /home/project/project/public/phpMyAdmin-5.2.2-all-languages/
        creates: /home/project/project/public/phpmyadmin/

    - name: Configure Nginx for phpMyAdmin
      copy:
        src: phpmyadmin.conf
        dest: /etc/nginx/conf.d/phpmyadmin.conf

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Download and extract WordPress
      shell: >
        cd /home/project/project/public/ &&
        wget https://wordpress.org/latest.tar.gz &&
        tar -xzf latest.tar.gz &&
        mv wordpress/* . &&
        rm -rf wordpress latest.tar.gz
      ignore_errors: yes
      #unarchive:
      #  src: https://wordpress.org/latest.tar.gz
      #  dest: /home/project/project/public/
      #  remote_src: yes
      #  extra_opts:
      #    - --strip-components=1

    #- name: Get MySQL temporary root password
    #  shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
    #  register: mysql_temp_password
    #  changed_when: false
    - name: Update mysql configuration file
      copy:
        src: mysql.conf
        dest: /etc/my.cnf

    - name: Set new root password
      community.mysql.mysql_user:
        login_user: root
        login_password: "Ansible#1"
        user: root
        password: "Ansible#1"
        host: localhost
        state: present
      ignore_errors: yes

    #- name: Create ~/.my.cnf for root user
    #  copy:
    #    dest: /root/.my.cnf
    #    content: |
    #      [client]
    #      user=root
    #      password=Ansible#1
    #    mode: '0600'

    - name: Configure MySQL database and user
      community.mysql.mysql_db:
        login_user: root
        login_password: "Ansible#1"
        name: wordpress
        state: present

    - name: Create WordPress user in MySQL
      community.mysql.mysql_user:
        login_user: root
        login_password: "Ansible#1"
        name: wpuser
        password: "WPUser#1"
        priv: 'wordpress.*:ALL'
        host: localhost
        state: present

    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted

    - name: Generate wp-config.php
      copy:
        src: wp-config.php
        dest: /home/project/project/public/wp-config.php

    - name: Reload nginx
      service:
        name: nginx
        state: reloaded

    - name: Restart nginx
      service:
        name: nginx
        state: restarted
